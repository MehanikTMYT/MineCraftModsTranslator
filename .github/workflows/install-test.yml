name: Install and Test on Testing Branch

on:
  push:
    branches:
      - 'testing-+-updates'
  pull_request:
    branches:
      - 'testing-+-updates'

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Display job information
        run: |
          echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
          echo "🐧 This job is now running on a runner.os server hosted by GitHub!"
          echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: List files in the repository (Linux)
        run: |
          ls -la ${{ github.workspace }}/API

      - name: Build the application with Electron for Linux
        working-directory: ./API
        run: npm run package -- --linux --x64

      - name: Rename AppImage file to binary (Linux)
        working-directory: ./API/dist
        run: |
          mv *.AppImage MineCraft_Mods_Translator
          chmod +x MineCraft_Mods_Translator

      - name: Archive artifacts for upload (Linux)
        uses: actions/upload-artifact@v3
        with:
          name: app-build-linux
          path: API/dist/MineCraft_Mods_Translator

      - name: Display job status (Linux)
        run: echo "🍏 This job's status is ${{ job.status }}."

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Display job information
        run: |
          echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
          echo "🐧 This job is now running on a runner.os server hosted by GitHub!"
          echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        working-directory: ./API
        run: npm ci

      - name: List files in the repository (Windows)
        run: |
          dir ${{ github.workspace }}\API

      - name: Build the application with Electron for Windows
        working-directory: ./API
        run: npm run package -- --win --x64 --portable

      - name: Rename Portable Executable file (Windows)
        working-directory: ./API/dist
        run: |
          ren "MineCraft Mods Translator*.exe" "MineCraft_Mods_Translator_Portable.exe"

      - name: Archive artifacts for upload (Windows)
        uses: actions/upload-artifact@v3
        with:
          name: app-build-windows
          path: API/dist/MineCraft_Mods_Translator_Portable.exe

      - name: Display job status (Windows)
        run: echo "🍏 This job's status is ${{ job.status }}."

  upload-release-assets:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Display job information
        run: |
          echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
          echo "🐧 This job is now running on a runner.os server hosted by GitHub!"
          echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Linux build artifact
        uses: actions/download-artifact@v3
        with:
          name: app-build-linux
          path: dist/linux

      - name: Download Windows build artifact
        uses: actions/download-artifact@v3
        with:
          name: app-build-windows
          path: dist/windows

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.event.release.tag_name }}
          release_name: Release ${{ github.event.release.tag_name }}
          draft: false
          prerelease: true

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux Binary to the release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/linux/MineCraft_Mods_Translator
          asset_name: MineCraft_Mods_Translator
          asset_content_type: application/octet-stream

      - name: Upload Portable Executable to the release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/windows/MineCraft_Mods_Translator_Portable.exe
          asset_name: MineCraft_Mods_Translator_Portable.exe
          asset_content_type: application/octet-stream

      - name: Display job status (Upload)
        run: echo "🍏 This job's status is ${{ job.status }}."
